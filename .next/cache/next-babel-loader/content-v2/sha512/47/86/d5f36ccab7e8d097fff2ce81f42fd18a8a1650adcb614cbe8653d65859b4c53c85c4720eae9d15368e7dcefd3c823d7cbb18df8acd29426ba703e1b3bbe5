{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Legion\\\\Desktop\\\\petkub-project\\\\petkub-frontend-tsx\\\\src\\\\context\\\\AuthContextProvider.tsx\";\nimport React, { createContext, useState } from 'react';\nconst initialState = {\n  authAction: 'close',\n  handleAuthAction: () => {}\n};\nexport const AuthContext = /*#__PURE__*/createContext(initialState);\n\nconst AuthContextProvider = ({\n  children\n}) => {\n  const {\n    0: authAction,\n    1: setAuthAction\n  } = useState('close');\n\n  const handleAuthAction = action => {\n    setAuthAction(action);\n  };\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authAction,\n      handleAuthAction\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AuthContextProvider;","map":{"version":3,"sources":["C:/Users/Legion/Desktop/petkub-project/petkub-frontend-tsx/src/context/AuthContextProvider.tsx"],"names":["React","createContext","useState","initialState","authAction","handleAuthAction","AuthContext","AuthContextProvider","children","setAuthAction","action"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAaA,MAAMC,YAA+B,GAAG;AACtCC,EAAAA,UAAU,EAAE,OAD0B;AAEtCC,EAAAA,gBAAgB,EAAE,MAAM,CAAE;AAFY,CAAxC;AAKA,OAAO,MAAMC,WAAW,gBAAGL,aAAa,CAAoBE,YAApB,CAAjC;;AAEP,MAAMI,mBAAoC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7D,QAAM;AAAA,OAACJ,UAAD;AAAA,OAAaK;AAAb,MAA8BP,QAAQ,CAAU,OAAV,CAA5C;;AAEA,QAAMG,gBAAkC,GAAIK,MAAD,IAAY;AACrDD,IAAAA,aAAa,CAACC,MAAD,CAAb;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLN,MAAAA,UADK;AAELC,MAAAA;AAFK,KADT;AAAA,cAMGG;AANH;AAAA;AAAA;AAAA;AAAA,UADF;AAUD,CAjBD;;AAmBA,eAAeD,mBAAf","sourcesContent":["import React, { createContext, useState } from 'react'\n\ninterface Props {}\n\ntype Actions = 'signup' | 'signin' | 'request' | 'reset' | 'close'\n\ntype HandleAuthAction = (action: Actions) => void\n\ninterface AuthContextValues {\n  authAction: Actions\n  handleAuthAction: HandleAuthAction\n}\n\nconst initialState: AuthContextValues = {\n  authAction: 'close',\n  handleAuthAction: () => {},\n}\n\nexport const AuthContext = createContext<AuthContextValues>(initialState)\n\nconst AuthContextProvider: React.FC<Props> = ({ children }) => {\n  const [authAction, setAuthAction] = useState<Actions>('close')\n\n  const handleAuthAction: HandleAuthAction = (action) => {\n    setAuthAction(action)\n  }\n\n  return (\n    <AuthContext.Provider\n      value={{\n        authAction,\n        handleAuthAction,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthContextProvider\n"]},"metadata":{},"sourceType":"module"}