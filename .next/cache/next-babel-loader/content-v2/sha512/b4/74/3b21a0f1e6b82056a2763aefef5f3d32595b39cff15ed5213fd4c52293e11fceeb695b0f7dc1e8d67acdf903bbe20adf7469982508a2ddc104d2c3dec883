{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\Legion\\\\Desktop\\\\petkub-project\\\\petkub-frontend-tsx\\\\src\\\\context\\\\AuthContextProvider.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { createContext, useState, useEffect } from 'react';\nimport { useQuery } from '@apollo/client';\nimport Router from 'next/router';\nimport { ME } from '../apollo/queries';\nvar initialState = {\n  authAction: 'close',\n  handleAuthAction: function handleAuthAction() {},\n  loggedInUser: null,\n  setAuthUser: function setAuthUser() {}\n};\nexport var AuthContext = /*#__PURE__*/createContext(initialState);\n\nvar AuthContextProvider = function AuthContextProvider(_ref) {\n  _s();\n\n  var children = _ref.children;\n\n  var _useState = useState('close'),\n      authAction = _useState[0],\n      setAuthAction = _useState[1];\n\n  var _useState2 = useState(null),\n      loggedInUser = _useState2[0],\n      setLoggedInUser = _useState2[1];\n\n  var _useQuery = useQuery(ME),\n      data = _useQuery.data;\n\n  useEffect(function () {\n    if (data !== null && data !== void 0 && data.me) setLoggedInUser(data.me);\n  }, [data === null || data === void 0 ? void 0 : data.me]);\n  useEffect(function () {\n    var syncSignout = function syncSignout(e) {\n      if (e.key === 'signout') {\n        // Log user out\n        setLoggedInUser(null); // Push user to home page\n\n        Router.push('/');\n      }\n    };\n\n    window.addEventListener('storage', syncSignout);\n    return function () {\n      return window.removeEventListener('storage', syncSignout);\n    };\n  }, []);\n\n  var handleAuthAction = function handleAuthAction(action) {\n    setAuthAction(action);\n  };\n\n  var setAuthUser = function setAuthUser(user) {\n    return setLoggedInUser(user);\n  };\n\n  console.log(loggedInUser);\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authAction: authAction,\n      handleAuthAction: handleAuthAction,\n      loggedInUser: loggedInUser,\n      setAuthUser: setAuthUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AuthContextProvider, \"PEsQOha3JL41RyB7KorqGq97vyo=\", false, function () {\n  return [useQuery];\n});\n\n_c = AuthContextProvider;\nexport default AuthContextProvider;\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthContextProvider\");","map":{"version":3,"sources":["C:/Users/Legion/Desktop/petkub-project/petkub-frontend-tsx/src/context/AuthContextProvider.tsx"],"names":["React","createContext","useState","useEffect","useQuery","Router","ME","initialState","authAction","handleAuthAction","loggedInUser","setAuthUser","AuthContext","AuthContextProvider","children","setAuthAction","setLoggedInUser","data","me","syncSignout","e","key","push","window","addEventListener","removeEventListener","action","user","console","log"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,EAAyCC,SAAzC,QAA0D,OAA1D;AACA,SAASC,QAAT,QAAyB,gBAAzB;AACA,OAAOC,MAAP,MAAmB,aAAnB;AAGA,SAASC,EAAT,QAAmB,mBAAnB;AAeA,IAAMC,YAA+B,GAAG;AACtCC,EAAAA,UAAU,EAAE,OAD0B;AAEtCC,EAAAA,gBAAgB,EAAE,4BAAM,CAAE,CAFY;AAGtCC,EAAAA,YAAY,EAAE,IAHwB;AAItCC,EAAAA,WAAW,EAAE,uBAAM,CAAE;AAJiB,CAAxC;AAOA,OAAO,IAAMC,WAAW,gBAAGX,aAAa,CAAoBM,YAApB,CAAjC;;AAEP,IAAMM,mBAAoC,GAAG,SAAvCA,mBAAuC,OAAkB;AAAA;;AAAA,MAAfC,QAAe,QAAfA,QAAe;;AAAA,kBACzBZ,QAAQ,CAAU,OAAV,CADiB;AAAA,MACtDM,UADsD;AAAA,MAC1CO,aAD0C;;AAAA,mBAErBb,QAAQ,CAAc,IAAd,CAFa;AAAA,MAEtDQ,YAFsD;AAAA,MAExCM,eAFwC;;AAAA,kBAI5CZ,QAAQ,CAAeE,EAAf,CAJoC;AAAA,MAIrDW,IAJqD,aAIrDA,IAJqD;;AAM7Dd,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIc,IAAJ,aAAIA,IAAJ,eAAIA,IAAI,CAAEC,EAAV,EAAcF,eAAe,CAACC,IAAI,CAACC,EAAN,CAAf;AACf,GAFQ,EAEN,CAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEC,EAAP,CAFM,CAAT;AAIAf,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMgB,WAAW,GAAG,SAAdA,WAAc,CAACC,CAAD,EAAqB;AACvC,UAAIA,CAAC,CAACC,GAAF,KAAU,SAAd,EAAyB;AACvB;AACAL,QAAAA,eAAe,CAAC,IAAD,CAAf,CAFuB,CAIvB;;AACAX,QAAAA,MAAM,CAACiB,IAAP,CAAY,GAAZ;AACD;AACF,KARD;;AAUAC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,SAAxB,EAAmCL,WAAnC;AAEA,WAAO;AAAA,aAAMI,MAAM,CAACE,mBAAP,CAA2B,SAA3B,EAAsCN,WAAtC,CAAN;AAAA,KAAP;AACD,GAdQ,EAcN,EAdM,CAAT;;AAgBA,MAAMV,gBAAkC,GAAG,SAArCA,gBAAqC,CAACiB,MAAD,EAAY;AACrDX,IAAAA,aAAa,CAACW,MAAD,CAAb;AACD,GAFD;;AAIA,MAAMf,WAAW,GAAG,SAAdA,WAAc,CAACgB,IAAD;AAAA,WAAuBX,eAAe,CAACW,IAAD,CAAtC;AAAA,GAApB;;AAEAC,EAAAA,OAAO,CAACC,GAAR,CAAYnB,YAAZ;AACA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLF,MAAAA,UAAU,EAAVA,UADK;AAELC,MAAAA,gBAAgB,EAAhBA,gBAFK;AAGLC,MAAAA,YAAY,EAAZA,YAHK;AAILC,MAAAA,WAAW,EAAXA;AAJK,KADT;AAAA,cAQGG;AARH;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CA7CD;;GAAMD,mB;UAIaT,Q;;;KAJbS,mB;AA+CN,eAAeA,mBAAf","sourcesContent":["import React, { createContext, useState, useEffect } from 'react'\nimport { useQuery } from '@apollo/client'\nimport Router from 'next/router'\n\nimport { User } from '../types'\nimport { ME } from '../apollo/queries'\n\ninterface Props {}\n\ntype Actions = 'signup' | 'signin' | 'request' | 'reset' | 'close'\n\ntype HandleAuthAction = (action: Actions) => void\n\ninterface AuthContextValues {\n  authAction: Actions\n  handleAuthAction: HandleAuthAction\n  loggedInUser: User | null\n  setAuthUser: (user: User | null) => void\n}\n\nconst initialState: AuthContextValues = {\n  authAction: 'close',\n  handleAuthAction: () => {},\n  loggedInUser: null,\n  setAuthUser: () => {},\n}\n\nexport const AuthContext = createContext<AuthContextValues>(initialState)\n\nconst AuthContextProvider: React.FC<Props> = ({ children }) => {\n  const [authAction, setAuthAction] = useState<Actions>('close')\n  const [loggedInUser, setLoggedInUser] = useState<User | null>(null)\n\n  const { data } = useQuery<{ me: User }>(ME)\n\n  useEffect(() => {\n    if (data?.me) setLoggedInUser(data.me)\n  }, [data?.me])\n\n  useEffect(() => {\n    const syncSignout = (e: StorageEvent) => {\n      if (e.key === 'signout') {\n        // Log user out\n        setLoggedInUser(null)\n\n        // Push user to home page\n        Router.push('/')\n      }\n    }\n\n    window.addEventListener('storage', syncSignout)\n\n    return () => window.removeEventListener('storage', syncSignout)\n  }, [])\n\n  const handleAuthAction: HandleAuthAction = (action) => {\n    setAuthAction(action)\n  }\n\n  const setAuthUser = (user: User | null) => setLoggedInUser(user)\n\n  console.log(loggedInUser)\n  return (\n    <AuthContext.Provider\n      value={{\n        authAction,\n        handleAuthAction,\n        loggedInUser,\n        setAuthUser,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthContextProvider"]},"metadata":{},"sourceType":"module"}