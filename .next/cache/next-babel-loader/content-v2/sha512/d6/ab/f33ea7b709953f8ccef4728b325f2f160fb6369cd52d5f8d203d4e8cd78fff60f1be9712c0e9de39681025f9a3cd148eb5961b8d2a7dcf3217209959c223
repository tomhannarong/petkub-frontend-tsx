{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport _regeneratorRuntime from \"C:/Users/i5ADESSO09/Desktop/petkub-project/petkub-frontend-tsx/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"C:/Users/i5ADESSO09/Desktop/petkub-project/petkub-frontend-tsx/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"C:/Users/i5ADESSO09/Desktop/petkub-project/petkub-frontend-tsx/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"C:\\\\Users\\\\i5ADESSO09\\\\Desktop\\\\petkub-project\\\\petkub-frontend-tsx\\\\src\\\\components\\\\ResetPassword.tsx\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useContext } from 'react';\nimport { useMutation } from '@apollo/client';\nimport { useForm } from 'react-hook-form';\nimport Loader from 'react-loader-spinner';\nimport Modal from './modal/Modal';\nimport { FormContainer, Header, StyledForm, InputContainer, Input, Button, StyledError, StyledInform } from './SignUp';\nimport { RESET_PASSWORD } from '../apollo/mutations';\nimport { AuthContext } from '../context/AuthContextProvider';\n\nvar ResetPassword = function ResetPassword(_ref) {\n  _s();\n\n  var _error$graphQLErrors$, _data$resetPassword;\n\n  var token = _ref.token;\n\n  var _useContext = useContext(AuthContext),\n      handleAuthAction = _useContext.handleAuthAction;\n\n  var _useForm = useForm(),\n      register = _useForm.register,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _useMutation = useMutation(RESET_PASSWORD),\n      _useMutation2 = _slicedToArray(_useMutation, 2),\n      resetPassword = _useMutation2[0],\n      _useMutation2$ = _useMutation2[1],\n      loading = _useMutation2$.loading,\n      error = _useMutation2$.error,\n      data = _useMutation2$.data;\n\n  var handleSubmitResetPassword = handleSubmit( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var password;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              password = _ref2.password;\n              _context.next = 3;\n              return resetPassword({\n                variables: {\n                  token: token,\n                  password: password\n                }\n              });\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }());\n  return /*#__PURE__*/_jsxDEV(Modal, {\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Header, {\n        children: /*#__PURE__*/_jsxDEV(\"h4\", {\n          children: \"Enter your new password below.\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(StyledForm, {\n        onSubmit: handleSubmitResetPassword,\n        children: [/*#__PURE__*/_jsxDEV(InputContainer, {\n          children: /*#__PURE__*/_jsxDEV(Input, {\n            type: \"password\",\n            name: \"password\",\n            id: \"password\",\n            placeholder: \"Your password\",\n            ref: register('password')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Button, {\n          disabled: loading,\n          style: {\n            cursor: loading ? 'not-allowed' : 'pointer'\n          },\n          children: loading ? /*#__PURE__*/_jsxDEV(Loader, {\n            type: \"Oval\",\n            color: \"white\",\n            height: 30,\n            width: 30,\n            timeout: 30000\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, _this) : 'Submit'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this), error && /*#__PURE__*/_jsxDEV(StyledError, {\n          children: ((_error$graphQLErrors$ = error.graphQLErrors[0]) === null || _error$graphQLErrors$ === void 0 ? void 0 : _error$graphQLErrors$.message) || 'Sorry, something went wrong'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, _this), data && /*#__PURE__*/_jsxDEV(StyledInform, {\n        children: /*#__PURE__*/_jsxDEV(\"p\", {\n          children: [(_data$resetPassword = data.resetPassword) === null || _data$resetPassword === void 0 ? void 0 : _data$resetPassword.message, ' ', /*#__PURE__*/_jsxDEV(\"span\", {\n            style: {\n              cursor: 'pointer',\n              color: 'red'\n            },\n            onClick: function onClick() {\n              return handleAuthAction('signin');\n            },\n            children: \"sign in\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ResetPassword, \"ieHQoaaefNwslAvBGtNekrFZi+Y=\", false, function () {\n  return [useForm, useMutation];\n});\n\n_c = ResetPassword;\nexport default ResetPassword;\n\nvar _c;\n\n$RefreshReg$(_c, \"ResetPassword\");","map":{"version":3,"sources":["C:/Users/i5ADESSO09/Desktop/petkub-project/petkub-frontend-tsx/src/components/ResetPassword.tsx"],"names":["React","useContext","useMutation","useForm","Loader","Modal","FormContainer","Header","StyledForm","InputContainer","Input","Button","StyledError","StyledInform","RESET_PASSWORD","AuthContext","ResetPassword","token","handleAuthAction","register","handleSubmit","resetPassword","loading","error","data","handleSubmitResetPassword","password","variables","cursor","graphQLErrors","message","color"],"mappings":"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","sourcesContent":["import React, { useContext } from 'react'\nimport { useMutation } from '@apollo/client'\nimport { useForm } from 'react-hook-form'\nimport Loader from 'react-loader-spinner'\n\nimport Modal from './modal/Modal'\nimport {\n  FormContainer,\n  Header,\n  StyledForm,\n  InputContainer,\n  Input,\n  Button,\n  StyledError,\n  StyledInform,\n} from './SignUp'\nimport { RESET_PASSWORD } from '../apollo/mutations'\nimport { AuthContext } from '../context/AuthContextProvider'\n\nconst ResetPassword: React.FC<{ token: string }> = ({ token }) => {\n  const { handleAuthAction } = useContext(AuthContext)\n  const { register, handleSubmit } = useForm<{ password: string }>()\n\n  const [resetPassword, { loading, error, data }] = useMutation<\n    { resetPassword: { message: string } },\n    { token: string; password: string }\n  >(RESET_PASSWORD)\n\n  const handleSubmitResetPassword = handleSubmit(async ({ password }) => {\n    await resetPassword({ variables: { token, password } })\n  })\n\n  return (\n    <Modal>\n      <FormContainer>\n        <Header>\n          <h4>Enter your new password below.</h4>\n        </Header>\n\n        <StyledForm onSubmit={handleSubmitResetPassword}>\n          <InputContainer>\n            <Input\n              type='password'\n              name='password'\n              id='password'\n              placeholder='Your password'\n              ref={register('password')}\n            />\n\n          </InputContainer>\n\n          <Button\n            disabled={loading}\n            style={{ cursor: loading ? 'not-allowed' : 'pointer' }}\n          >\n            {loading ? (\n              <Loader\n                type='Oval'\n                color='white'\n                height={30}\n                width={30}\n                timeout={30000}\n              />\n            ) : (\n              'Submit'\n            )}\n          </Button>\n\n          {error && (\n            <StyledError>\n              {error.graphQLErrors[0]?.message || 'Sorry, something went wrong'}\n            </StyledError>\n          )}\n        </StyledForm>\n\n        {data && (\n          <StyledInform>\n            <p>\n              {data.resetPassword?.message}{' '}\n              <span\n                style={{ cursor: 'pointer', color: 'red' }}\n                onClick={() => handleAuthAction('signin')}\n              >\n                sign in\n              </span>\n            </p>\n          </StyledInform>\n        )}\n      </FormContainer>\n    </Modal>\n  )\n}\n\nexport default ResetPassword"]},"metadata":{},"sourceType":"module"}