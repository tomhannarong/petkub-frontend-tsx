{"ast":null,"code":"import { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar _jsxFileName = \"C:\\\\Users\\\\Legion\\\\Desktop\\\\petkub-project\\\\petkub-frontend-tsx\\\\src\\\\context\\\\AuthContextProvider.tsx\";\nimport React, { createContext, useState } from 'react';\nconst initialState = {\n  authAction: 'close',\n  handleAuthAction: () => {},\n  loggedInUser: null,\n  setAuthUser: () => {}\n};\nexport const AuthContext = /*#__PURE__*/createContext(initialState);\n\nconst AuthContextProvider = ({\n  children\n}) => {\n  const {\n    0: authAction,\n    1: setAuthAction\n  } = useState('close');\n  const {\n    0: loggedInUser,\n    1: setLoggedInUser\n  } = useState(null);\n\n  const handleAuthAction = action => {\n    setAuthAction(action);\n  };\n\n  const setAuthUser = user => setLoggedInUser(user);\n\n  return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n    value: {\n      authAction,\n      handleAuthAction,\n      loggedInUser,\n      setAuthUser\n    },\n    children: children\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n};\n\nexport default AuthContextProvider;","map":{"version":3,"sources":["C:/Users/Legion/Desktop/petkub-project/petkub-frontend-tsx/src/context/AuthContextProvider.tsx"],"names":["React","createContext","useState","initialState","authAction","handleAuthAction","loggedInUser","setAuthUser","AuthContext","AuthContextProvider","children","setAuthAction","setLoggedInUser","action","user"],"mappings":";;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,EAA+BC,QAA/B,QAA+C,OAA/C;AAiBA,MAAMC,YAA+B,GAAG;AACtCC,EAAAA,UAAU,EAAE,OAD0B;AAEtCC,EAAAA,gBAAgB,EAAE,MAAM,CAAE,CAFY;AAGtCC,EAAAA,YAAY,EAAE,IAHwB;AAItCC,EAAAA,WAAW,EAAE,MAAM,CAAE;AAJiB,CAAxC;AAOA,OAAO,MAAMC,WAAW,gBAAGP,aAAa,CAAoBE,YAApB,CAAjC;;AAEP,MAAMM,mBAAoC,GAAG,CAAC;AAAEC,EAAAA;AAAF,CAAD,KAAkB;AAC7D,QAAM;AAAA,OAACN,UAAD;AAAA,OAAaO;AAAb,MAA8BT,QAAQ,CAAU,OAAV,CAA5C;AACA,QAAM;AAAA,OAACI,YAAD;AAAA,OAAeM;AAAf,MAAkCV,QAAQ,CAAc,IAAd,CAAhD;;AAEA,QAAMG,gBAAkC,GAAIQ,MAAD,IAAY;AACrDF,IAAAA,aAAa,CAACE,MAAD,CAAb;AACD,GAFD;;AAIA,QAAMN,WAAW,GAAIO,IAAD,IAAuBF,eAAe,CAACE,IAAD,CAA1D;;AAEA,sBACE,QAAC,WAAD,CAAa,QAAb;AACE,IAAA,KAAK,EAAE;AACLV,MAAAA,UADK;AAELC,MAAAA,gBAFK;AAGLC,MAAAA,YAHK;AAILC,MAAAA;AAJK,KADT;AAAA,cAQGG;AARH;AAAA;AAAA;AAAA;AAAA,UADF;AAYD,CAtBD;;AAwBA,eAAeD,mBAAf","sourcesContent":["import React, { createContext, useState } from 'react'\n\nimport { User } from '../types'\n\ninterface Props {}\n\ntype Actions = 'signup' | 'signin' | 'request' | 'reset' | 'close'\n\ntype HandleAuthAction = (action: Actions) => void\n\ninterface AuthContextValues {\n  authAction: Actions\n  handleAuthAction: HandleAuthAction\n  loggedInUser: User | null\n  setAuthUser: (user: User | null) => void\n}\n\nconst initialState: AuthContextValues = {\n  authAction: 'close',\n  handleAuthAction: () => {},\n  loggedInUser: null,\n  setAuthUser: () => {},\n}\n\nexport const AuthContext = createContext<AuthContextValues>(initialState)\n\nconst AuthContextProvider: React.FC<Props> = ({ children }) => {\n  const [authAction, setAuthAction] = useState<Actions>('close')\n  const [loggedInUser, setLoggedInUser] = useState<User | null>(null)\n\n  const handleAuthAction: HandleAuthAction = (action) => {\n    setAuthAction(action)\n  }\n\n  const setAuthUser = (user: User | null) => setLoggedInUser(user)\n\n  return (\n    <AuthContext.Provider\n      value={{\n        authAction,\n        handleAuthAction,\n        loggedInUser,\n        setAuthUser,\n      }}\n    >\n      {children}\n    </AuthContext.Provider>\n  )\n}\n\nexport default AuthContextProvider"]},"metadata":{},"sourceType":"module"}